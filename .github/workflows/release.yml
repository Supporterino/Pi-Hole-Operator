name: Release

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
    tags: [ '[0-9]+.[0-9]+.[0-9]+' ]

jobs:
  build-operator:
    runs-on: ubuntu-latest
    env:
      IMG: ghcr.io/supporterino/pi-hole-operator:${{ github.sha }}
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true

      - name: Docker Build
        run: |
          make docker-build

  release-operator:
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    needs: build-operator
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    env:
      IMG: ghcr.io/supporterino/pi-hole-operator:${{ github.ref_name }}
      VERSION: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
          fetch-depth: 0   # full history is required for git‚Äëlog

      - name: Build
        run: |
          make build
          make build-installer

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Github container repository
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install helm
        uses: azure/setup-helm@v4

      - name: Push Helm chart as OCI to Github
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | \
            helm registry login -u ${{ github.actor }} --password-stdin ghcr.io
          helm package dist/chart
          helm push pi-hole-operator-${{ env.VERSION }}.tgz oci://ghcr.io/supporterino/pi-hole-operator/helm

      - name: Build and Publish image into GHCR
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/supporterino/pi-hole-operator:${{ github.ref_name }}
          platforms: |
            linux/amd64
            linux/arm64
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_USERNAME: ${{ github.actor }}
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate release notes
        id: gen_notes
        run: |
          # Find the tag that precedes the current one
          PREV_VERSION=$(git describe --tags \
            $(git rev-list --tags --skip=1 --max-count=1) 2>/dev/null || echo "0.0.0")
          echo "PREV_VERSION=$PREV_VERSION" >> $GITHUB_ENV
          
          # Build the commit list
          if [[ "$PREV_VERSION" == "0.0.0" ]]; then
            LOG=$(git log --pretty=format:"- %h %s")
          else
            LOG=$(git log --pretty=format:"- %h %s" "$PREV_VERSION"..HEAD)
          fi
          
          # Compose the notes
          NOTES="üìù Release notes (commits since $PREV_VERSION):\n$LOG"
          
          # Write the multiline output to GITHUB_OUTPUT
          printf 'release_notes<<EOF\n%s\nEOF' "$NOTES" >> $GITHUB_OUTPUT

      - name: publish github release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./dist/install.yaml
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          body: |
            ${{ steps.gen_notes.outputs.release_notes }}
            
            Docker image: ghcr.io/supporterino/pi-hole-operator:${{ github.ref_name }}
            Helm chart: oci://ghcr.io/supporterino/pi-hole-operator/helm
          draft: false